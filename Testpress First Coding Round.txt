
/*
1. Solve the below programs and share the solution link using
https://www.onlinegdb.com/
1. Write a program to print the reverse of the given string.
Input
codecode
Output
edocedoc
Input Constraints
1<=Length of string<=100
Input string contains only lowercase characters ['a' to 'z'].

*/


public class ReverceString {
	
	public static void main(String[] args) {
		
		String s="codecode";
		
		String s1="";
		for(int i=0; i<s.length(); i++)
		{
			char ch=s.charAt(i);
			
			s1=ch+s1;
			
		}
		System.out.println(s1);
	}

}


/*
2. Given a number, check whether it is a prime number or not.
Input 1
3
Output 1
Yes
Input 2
4
Output 2
No

*/

public static void main(String[] args) {
		
		int num=4;
		
		boolean flag=false;
		
		for(int i=2; i<num; i++) 
		{
			
			if(num%i==0)
			{
			    flag=true;
			}
		}
		if(flag==false)
		{
			System.out.println("Yes");
		}
		else
		{
			System.out.println("No");
		}

	}

/*
3. Given an array of numbers, arrange them in a way that it forms the largest value.
Input
[54, 546, 548, 60]
Output
6054854654

Note
The arrangement 6054854654 gives the largest value.
Constraints
1<=N<=1000
1<=Number<=1000000

*/

public class LargestNumber {

    public static void main(String[] args) 
    {
        int[] inputArray = {54, 546, 548, 60};
        String largestNumber = getLargestNumber(inputArray);
        System.out.println(largestNumber);
    }

    public static String getLargestNumber(int[] nums) {
        
        String[] numStrings = new String[nums.length];
        for (int i = 0; i < nums.length; i++) 
        {
            numStrings[i] = String.valueOf(nums[i]);
        }

        Comparator<String> comp = new Comparator<String>() {
           
            public int compare(String x, String y) 
            {
                String xy = x + y;
                String yx = y + x;
                return yx.compareTo(xy);
            }
        };

        
        Arrays.sort(numStrings, comp);
        StringBuilder largestNumBuilder = new StringBuilder();
        for (String numString : numStrings) 
        {
            largestNumBuilder.append(numString);
        }

        return largestNumBuilder.toString();
    }
}

/*
4. Given a number N, print reverse of number N.
Input
988
Output
889
Note
Do not print leading zeros in output.
For example N = 100
Reverse of N should be 1 not 001.
Constraints
1<=N<=10000
*/

public class Reverse_Number {

	public static void main(String[] args) {

	int num=123;
	
	int temp=num;
	
	int sum=0;
	while(temp>0)
	{
		int last_digit=temp%10;
		
		sum=10*sum+last_digit;
		
		temp=temp/10;
		
	}
	System.out.println("Reverse Number : " +sum);
	
  }
}


/*

5. Given an array of numbers, find the maximum and minimum element in the array.
Input
[54, 546, 548, 60]
Output
548 54

*/

public class Find_Max_Min_Value {

	public static void main(String[] args) {
		
		int a[]= {54, 546, 548, 60};
		
		//maximum value
		
        int max=Integer.MIN_VALUE;
		
		for(int i=0; i<a.length; i++)
		{
			if(a[i]>max)
				max=a[i];
		}
		System.out.println("maximum value : "+max);
		
		//Minimum Value
		
        int min=Integer.MAX_VALUE;
		
		for(int i=0; i<a.length; i++)
		{
			if(a[i]<min)
				min=a[i];
		}
		
		System.out.println("Minimum Value : "+min);

		

	}

}




